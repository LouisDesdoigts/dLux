# Great resource: https://squidfunk.github.io/mkdocs-material/setup/setting-up-navigation/#with-section-index-pages
# https://squidfunk.github.io/mkdocs-material/reference/buttons/

site_name: dLux
docs_dir: .
site_description: Documentation for dLux.
site_author: Louis Desdoigts
site_url: https://louisdesdoigts.github.io/dlux/
repo_url: https://github.com/LouisDesdoigts/dlux
repo_name: louisdesdoigts/dlux
edit_uri: "" 

strict: false  # Allow warnings during the build process (change later)

plugins:
  - mkdocs-jupyter
  - search
  - same-dir
  - autorefs
  - simple:
      ignore_folders:
        - tests
        - dLux
  - mkdocstrings:
      default_handler: python
      handlers:
        python:
          options:
            docstring_style: "numpy"

markdown_extensions:
  - admonition
  - pymdownx.details
  - pymdownx.superfences
  - pymdownx.arithmatex:  # Render LaTeX via MathJax
      generic: true
  - pymdownx.snippets:  # Include one Markdown file into another
      base_path: docs
  - admonition
  - toc:
      permalink: "¤"  # Adds a clickable permalink to each section heading
      toc_depth: 4
  - def_list
  - pymdownx.tasklist:
      custom_checkbox: true
  - attr_list # Allows images
  - md_in_html # Allows images

extra_javascript: # Used for MathJax
  - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js


theme:
  palette:
    scheme: slate
  logo: assets/logo.jpg
  favicon: material/telescope
  name: material
  icon:
    logo: material/telescope

theme:
  logo: assets/logo.jpg
  favicon: material/telescope
  icon:
    logo: material/telescope
    # repo: fontawesome/brands/github
    # logo: fontawesome/regular/moon
    # logo: octicons/moon-16
  name: material
  features:
    # - navigation.sections
    - navigation.expand
    - navigation.path
    - navigation.indexes 
    - navigation.top
    - content.code.copy
    # - navigation.tabs # Adds tabs for High Level settings
    # - navigation.tabs.sticky
    - toc.integrate  # Table of contents is integrated on the left; does not appear separately on the right.
    # - toc.integrate
    # - content.action.view
  palette:
    # Light mode / dark mode
    # We deliberately don't automatically use `media` to check a user's preferences. We default to light mode as
    # (a) it looks more professional, and (b) is more obvious about the fact that it offers a (dark mode) toggle.
    - scheme: default
      primary: white
      accent: amber
      toggle:
        icon: material/weather-night
        name: Switch to dark mode
    - scheme: slate
      primary: black
      accent: amber
      toggle:
        icon: material/weather-sunny
        name: Switch to light mode





# # ===== Setup and Themes =====
# markdown_extensions:
#   # - mkdocs_graphviz
#   - pymdownx.arithmatex:
#       generic: true

# extra_javascript:
#   - javascripts/mathjax.js
#   - https://polyfill.io/v3/polyfill.min.js?features=es6
#   - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
#   - https://cdn.jsdelivr.net/gh/rod2ik/cdn@main/mkdocs/javascripts/mkdocs-graphviz.js

# site_name: ∂Lux - Differentiable Optical Simulation
# repo_url: https://github.com/LouisDesdoigts/dLux

# theme:
#   palette:
#     scheme: slate
#   logo: assets/logo.jpg
#   favicon: material/telescope
#   name: material
#   icon:
#     logo: material/telescope

# # ===== Plugins =====
# plugins:
#   - search
#   - mkdocs-jupyter
#   - mkdocstrings:
#       default_handler: python
#       handlers:
#         python:
#           selection:
#             docstring_style: "numpy"
#           setup_commands:
#             - import sys
#             - sys.path.append("dLux")
#           rendering:
#             show_source: false
#             show_if_no_docstring: yes
#       custom_templates: templates




# ===== Navigation =====
nav:
    # - Home: index.md
    - Home: README.md
    - Installation: installation.md

    - Tutorials:
        - Usage:                    docs/usage.md
        - Creating a Layer:         docs/creating_a_layer.md
        - Phase Retrieval:          docs/notebooks/phase_retrieval_demo.ipynb
        - Phase Mask Design:        docs/notebooks/designing_a_mask.ipynb
        - Pixel Level Calibration:  docs/notebooks/flatfield_calibration.ipynb
        - Fisher Information:       docs/notebooks/fisher_information.ipynb
        - Parameter Inference:      docs/notebooks/HMC.ipynb

    - dLux API: 
        - Overview:     docs/API/api.md
        - Core:         docs/API/core.md
        - Optics:       docs/API/optics.md
        - Apertures:    docs/API/apertures.md
        - Aberrations:  docs/API/aberrations.md
        - Propagators:  docs/API/propagators.md
        - Wavefronts:   docs/API/wavefronts.md
        - Detectors:    docs/API/detectors.md
        - Sources:      docs/API/sources.md
        - Spectrums:    docs/API/spectrums.md
        - Observations: docs/API/observations.md

    - Utils API:
        - Overview:      docs/API/utils.md
        - Optics:        docs/API/optics_util.md
        - Models:        docs/API/models.md
        - Units:         docs/API/units.md
        - Math:          docs/API/math.md
        - Coordinates:   docs/API/coordinates.md
        - Interpolation: docs/API/interpolation.md
        - Bayes:         docs/API/bayes.md
        - Helpers:       docs/API/helpers.md

    - FAQ & Troubleshooting: docs/faq.md
    - Change Log: CHANGELOG.md
    - Contributing: CONTRIBUTING.md








    # - Core:
    #     - Instrument: docs/core/instrument.md
    #     - Optics:     docs/core/optics.md
    #     - Scene:      docs/core/scene.md
    #     - Detector:   docs/core/detector.md
    #     - Filter:     docs/core/filter.md
    #     - model:      docs/core/model.md

    # - Optical Layers:
    #     - Create Wavefront:    docs/optics/create_wavefront.md
    #     - Normalise Wavefront: docs/optics/normalise_wavefront.md
    #     - Tilt Wavefront:      docs/optics/tilt_wavefront.md
    #     - Transmissive Optic:  docs/optics/transmissive_optic.md
    #     - Add Phase:           docs/optics/add_phase.md
    #     - Add OPD:             docs/optics/add_opd.md
    #     - Apply Basis OPD:     docs/optics/apply_basis_opd.md
    #     - Apply Basis CLIMB:   docs/optics/apply_basis_climb.md
    #     - Rotate:              docs/optics/rotate.md

    #     - Apertures:
    #         - Overview:                     docs/apertures/overview.md
    #         - Aperture Factory:             docs/apertures/api/aperture_factory.md
    #         - Circular Aperture:            docs/apertures/api/circular_aperture.md
    #         - Annular Aperture:             docs/apertures/api/annular_aperture.md
    #         - Hexagonal Aperture:           docs/apertures/api/hexagonal_aperture.md
    #         - Rectangular Aperture:         docs/apertures/api/rectangular_aperture.md
    #         - Square Aperture:              docs/apertures/api/square_aperture.md
    #         - Regular Polygonal Aperture:   docs/apertures/api/regular_polygonal_aperture.md
    #         - Irregular Polygonal Aperture: docs/apertures/api/irregular_polygonal_aperture.md
    #         - Uniform Spider:               docs/apertures/api/uniform_spider.md
    #         - Aberrated Aperture:           docs/apertures/api/aberrated_aperture.md
    #         - Compound Aperture:            docs/apertures/api/compound_aperture.md
    #         - Multi Aperture:               docs/apertures/api/multi_aperture.md
    #         - Static Aperture:              docs/apertures/api/static_aperture.md
    #         - Static Aberrated Aperture:    docs/apertures/api/static_aberrated_aperture.md


    #     - Propagators:
    #         - Cartesian MFT:     docs/propagators/concrete/cartesian_mft.md
    #         - Angular MFT:       docs/propagators/concrete/angular_mft.md
    #         - Cartesian FFT:     docs/propagators/concrete/cartesian_fft.md
    #         - Angular FFT:       docs/propagators/concrete/angular_fft.md
    #         - Cartesian Fresnel: docs/propagators/concrete/cartesian_fresnel.md
    
    # - Aberrations:
    #     - Zernike:            docs/aberrations/zernike.md
    #     - Zenike Basis:       docs/aberrations/zernike_basis.md
    #     - Aberration Factory: docs/aberrations/aberration_factory.md
    
    # - Observations:
    #     - Abstract Observation: docs/observations/abstract_observation.md
    #     - Dither:               docs/observations/dither.md

    # - Wavefronts:
    #     - Wavefront:                   docs/wavefronts/wavefront.md
    #     - Cartesian Wavefront:         docs/wavefronts/cartesian_wavefront.md
    #     - Angular Wavefront:           docs/wavefronts/angular_wavefront.md
    #     - Far Field Fresnel Wavefront: docs/wavefronts/far_field_fresnel_wavefront.md

    # - Sources:
    #     - Point Source:              docs/sources/point_source.md
    #     - Multiple Point Sources:    docs/sources/multi_point_source.md
    #     - Binary Source:             docs/sources/binary_source.md
    #     - Array Distribution:        docs/sources/array_distribution.md
    #     - Point Extended Source:     docs/sources/point_extended_source.md
    #     - Point And Extended Source: docs/sources/point_and_extended_source.md

    # - Spectrums:
    #     - Array Spectrum:      docs/spectrums/array_spectrum.md
    #     - Polynomial Spectrum: docs/spectrums/polynomial_spectrum.md
    #     - Combined Spectrum:   docs/spectrums/combined_spectrum.md

    # - Detectors:
    #     - Apply Pixel Response:  docs/detectors/apply_pixel_response.md
    #     - Apply Jitter:          docs/detectors/apply_jitter.md
    #     - Apply Saturation:      docs/detectors/apply_saturation.md
    #     - Add Constant:          docs/detectors/add_constant.md
    #     - Integer Downsample:    docs/detectors/integer_downsample.md
    #     - Rotate:                docs/detectors/rotate.md

    # - Utils:
    #     - Models:
    #         - simple optical system: docs/utils/models/simple_optical_system.md
    #         - toliman:               docs/utils/models/toliman.md
    #     - Units:
    #         - convert cartesian:        docs/utils/units/convert_cartesian.md
    #         - convert angular:          docs/utils/units/convert_angular.md
    #         - radians to arcseconds:    docs/utils/units/radians_to_arcseconds.md
    #         - radians to degrees:       docs/utils/units/radians_to_degrees.md
    #         - radians to arcminutes:    docs/utils/units/radians_to_arcminutes.md
    #         - degrees to radians:       docs/utils/units/degrees_to_radians.md
    #         - degrees to arcminutes:    docs/utils/units/degrees_to_arcminutes.md
    #         - degrees to arcseconds:    docs/utils/units/degrees_to_arcseconds.md
    #         - arcminutes to radians:    docs/utils/units/arcminutes_to_radians.md
    #         - arcminutes to degrees:    docs/utils/units/arcminutes_to_degrees.md
    #         - arcminutes to arcseconds: docs/utils/units/arcminutes_to_arcseconds.md
    #         - arcseconds to radians:    docs/utils/units/arcseconds_to_radians.md
    #         - arcseconds to degrees:    docs/utils/units/arcseconds_to_degrees.md
    #         - arcseconds to arcminutes: docs/utils/units/arcseconds_to_arcminutes.md
    #     - Math:
    #         - factorial: docs/utils/math/factorial.md
    #     - Coordinates:
    #         - translate:              docs/utils/coordinates/translate.md
    #         - rotate:                 docs/utils/coordinates/rotate.md
    #         - compress:               docs/utils/coordinates/compress.md
    #         - shear:                  docs/utils/coordinates/shear.md
    #         - cartesian to polar:     docs/utils/coordinates/cartesian_to_polar.md
    #         - polar to cartesian:     docs/utils/coordinates/polar_to_cartesian.md
    #         - get pixel positions:    docs/utils/coordinates/get_pixel_positions.md
    #     - Interpolation:
    #         - scale array:          docs/utils/interpolation/scale_array.md
    #         - generate coordinates: docs/utils/interpolation/generate_coordinates.md
    #         - interpolate:          docs/utils/interpolation/interpolate.md
    #         - interpolate field:    docs/utils/interpolation/interpolate_field.md
    #         - rotate:               docs/utils/interpolation/rotate.md
    #         - fourier_rotate:       docs/utils/interpolation/fourier_rotate.md
    #     - Optics:
    #         - opd to phase:          docs/utils/optics/opd_to_phase.md
    #         - phase to opd:          docs/utils/optics/phase_to_opd.md
    #         - get fringe size:       docs/utils/optics/get_fringe_size.md
    #         - get pixels per fringe: docs/utils/optics/get_pixels_per_fringe.md
    #         - get pixel scale:       docs/utils/optics/get_pixel_scale.md
    #         - get airy pixel scale:  docs/utils/optics/get_airy_pixel_scale.md
    #     - Bayes:
    #         - poisson likelihood:     docs/utils/bayes/poisson_likelihood.md
    #         - poisson log likelihood: docs/utils/bayes/poisson_log_likelihood.md
    #         - chi2 likelihood:        docs/utils/bayes/chi2_likelihood.md
    #         - chi2 log likelihood:    docs/utils/bayes/chi2_log_likelihood.md
    #         - calculate covariance:   docs/utils/bayes/calculate_covariance.md
    #         - calculate entropy:      docs/utils/bayes/calculate_entropy.md
    #     - Gradient Energy:
    #         - get GE:          docs/utils/gradient_energy/get_GE.md
    #         - get RGE:         docs/utils/gradient_energy/get_RGE.md
    #         - get RWGE:        docs/utils/gradient_energy/get_RWGE.md
    #         - get radial mask: docs/utils/gradient_energy/get_radial_mask.md
    #     - Helpers:
    #         - list to dictionary: docs/utils/helpers/list_to_dictionary.md
    #         - two image plot:     docs/utils/helpers/two_image_plot.md
